<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>dev on Joe Heaton.dev</title>
    <link>https://www.heaton.dev/tags/dev/</link>
    <description>Recent content in dev on Joe Heaton.dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <copyright>&amp;copy; Joe Heaton</copyright>
    <lastBuildDate>Tue, 17 May 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://www.heaton.dev/tags/dev/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Understand MermaidJS; Concepts &amp; Syntax</title>
      <link>https://www.heaton.dev/2022/05/understand-mermaidjs-concepts-syntax/</link>
      <pubDate>Tue, 17 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.heaton.dev/2022/05/understand-mermaidjs-concepts-syntax/</guid>
      <description>&lt;p&gt;MermaidJS is great because it brings graphs-as-code to the web! No longer do we need to run graphviz from the commandline to generate static image files each time we make a change; Now we see changes instantly, embed graphs with ease in source repositories and track their changes, etc..&lt;/p&gt;
&lt;p&gt;The trouble I&amp;rsquo;ve had with Mermaid is figuring out the syntax, there are quite a few gotchas which don&amp;rsquo;t advertise themselves very clearly, such as it not tolerating blank lines, or spaces are comma-deliminated lists.. I&amp;rsquo;ll list these here so you can get graphing quicker than I did!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Styling MermaidJS</title>
      <link>https://www.heaton.dev/2022/05/styling-mermaidjs/</link>
      <pubDate>Fri, 13 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.heaton.dev/2022/05/styling-mermaidjs/</guid>
      <description>&lt;p&gt;What&amp;rsquo;s better than a graph? A graph with style!&lt;/p&gt;
&lt;p&gt;Using Mermaid&amp;rsquo;s class definitions we can style blocks and subgraphs to reflect the ecosystem they belong to; In this case I want to style my infrastructure diagrams to Google&amp;rsquo;s branding.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>My VSCode</title>
      <link>https://www.heaton.dev/2022/05/my-vscode/</link>
      <pubDate>Mon, 02 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.heaton.dev/2022/05/my-vscode/</guid>
      <description>&lt;p&gt;Visual Studio Code, &amp;ldquo;VSCode&amp;rdquo;, is the hugely featureful successor to projects like Atom &amp;amp; Visual Studio itself, the extensibility of VSCode is key to this success and I&amp;rsquo;m going to share what I do to make VSCode work for me.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Host Hugo static website on GitHub Pages using Actions and my domain</title>
      <link>https://www.heaton.dev/2021/03/host-hugo-static-website-on-github-pages-using-actions-and-my-domain/</link>
      <pubDate>Fri, 12 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.heaton.dev/2021/03/host-hugo-static-website-on-github-pages-using-actions-and-my-domain/</guid>
      <description>&lt;p&gt;In a cost-saving exercise I wanted to try host my personal website on a free platform, since the code repository is hosted on GitHub, I decided to look into GitHub pages.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>my Vim</title>
      <link>https://www.heaton.dev/2020/10/my-vim/</link>
      <pubDate>Wed, 14 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.heaton.dev/2020/10/my-vim/</guid>
      <description>&lt;p&gt;This is my &lt;code&gt;.vimrc&lt;/code&gt;, I find it benefitial to use this where I do development to normalise my editor across different operating systems, and to enable some useful untapped features to make Vim feel a bit less prehistoric.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Windows Terminal - Change default profile</title>
      <link>https://www.heaton.dev/2020/02/windows-terminal-change-default-profile/</link>
      <pubDate>Fri, 21 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.heaton.dev/2020/02/windows-terminal-change-default-profile/</guid>
      <description>The new Windows Terminal requires some manual intervention to set the default profile.</description>
    </item>
    
    <item>
      <title>Useful Unixisms</title>
      <link>https://www.heaton.dev/2020/02/useful-unixisms/</link>
      <pubDate>Mon, 17 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.heaton.dev/2020/02/useful-unixisms/</guid>
      <description>&lt;p&gt;Here&amp;rsquo;s a list of useful piped commands or just commands for which I need a refresher on which arguments to use. For example, using Awk to print between two known lines, or seleting a line in sed are good examples of infrequently used commands which are really useful.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Run for every updated file</title>
      <link>https://www.heaton.dev/2020/02/run-for-every-updated-file/</link>
      <pubDate>Tue, 11 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.heaton.dev/2020/02/run-for-every-updated-file/</guid>
      <description>&lt;p&gt;Using &lt;code&gt;inotifywait&lt;/code&gt; to watch for file changes recursively in the current directory. I use &lt;code&gt;$CHECK&lt;/code&gt; to ignore unwanted directories and filetypes.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Git feature branch &amp; merge</title>
      <link>https://www.heaton.dev/2019/04/git-feature-branch-merge/</link>
      <pubDate>Tue, 09 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.heaton.dev/2019/04/git-feature-branch-merge/</guid>
      <description>Start with your master branch
git checkout master git fetch origin If your local master has been modified, you can reset its state.
git reset --hard origin/master
Checkout a new feature branch.
git checkout -b my-feature
Make changes in this branch, committing as usual.
git add file.txt git commit -m &amp;#34;add my file.txt&amp;#34; You can push your branch to allow others and yourself to evaluate and commit further to it.</description>
    </item>
    
    <item>
      <title>tmux</title>
      <link>https://www.heaton.dev/2019/04/tmux/</link>
      <pubDate>Wed, 03 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.heaton.dev/2019/04/tmux/</guid>
      <description>&lt;p&gt;I find myself working on the move a lot more recently and I often have to deal with poor terminal emulators, iffy connectivity and sometimes I need resume my work on another machine entirely. As such I am trying out tmux as a way of persisting my working environment between sessions, supporting multiple tabs for when my emulator lacks it (Looking at you PuTTY, Git Bash) and lastly allowing me to resume my work on another desktop.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
