<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>bash on Joe Heaton.dev</title>
    <link>https://www.heaton.dev/tags/bash/</link>
    <description>Recent content in bash on Joe Heaton.dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <copyright>&amp;copy; Joe Heaton</copyright>
    <lastBuildDate>Thu, 14 Jul 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://www.heaton.dev/tags/bash/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Terraform init-validate-plan-apply Bash function</title>
      <link>https://www.heaton.dev/2022/07/terraform-init-validate-plan-apply-bash-function/</link>
      <pubDate>Thu, 14 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.heaton.dev/2022/07/terraform-init-validate-plan-apply-bash-function/</guid>
      <description>&lt;p&gt;Tired of typing Terraform init, validate, apply? I&amp;rsquo;ve written this bash function to speed this up and implement some good practices.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Bash opinions</title>
      <link>https://www.heaton.dev/2021/06/bash-opinions/</link>
      <pubDate>Fri, 25 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.heaton.dev/2021/06/bash-opinions/</guid>
      <description>Everyone has their own preferences when it comes to writing Bash scripts, I prefer very high safety &amp;amp; syntax consistency. A good example of both is variables, ${USER} can be shortened to $USER, but any following characters could be interpreted as part of the variable name. The longer syntax is also more powerful, enabling small conditional checks, which means we&amp;rsquo;ll likely end up using the longer syntax somewhere in our script, so why not keep it consistent and use it everywhere!</description>
    </item>
    
    <item>
      <title>Useful Unixisms</title>
      <link>https://www.heaton.dev/2020/02/useful-unixisms/</link>
      <pubDate>Mon, 17 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.heaton.dev/2020/02/useful-unixisms/</guid>
      <description>&lt;p&gt;Here&amp;rsquo;s a list of useful piped commands or just commands for which I need a refresher on which arguments to use. For example, using Awk to print between two known lines, or seleting a line in sed are good examples of infrequently used commands which are really useful.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>My terminal login message</title>
      <link>https://www.heaton.dev/2018/07/my-terminal-login-message/</link>
      <pubDate>Fri, 27 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.heaton.dev/2018/07/my-terminal-login-message/</guid>
      <description>&lt;p&gt;Following on from &lt;a href=&#34;https://www.heaton.dev/2018/07/25/bashrc.html&#34;&gt;bashrc&lt;/a&gt;, here is a snapshot and explaination of my &lt;code&gt;.motd&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>My bash profile</title>
      <link>https://www.heaton.dev/2018/07/my-bash-profile/</link>
      <pubDate>Wed, 25 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.heaton.dev/2018/07/my-bash-profile/</guid>
      <description>&lt;p&gt;Here&amp;rsquo;s a snapshot of my .bashrc, I put this together to normalise my environment; which is particularly useful when working across CentOS/RHEL 6/7, SLES11/12 &amp;amp; Debian/Ubuntu.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ll overexplain some lines and underexplain others, depending on how interesting they are.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
